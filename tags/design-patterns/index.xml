<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design Patterns on Joon Career</title><link>https://jooncode.com/tags/design-patterns/</link><description>Recent content in Design Patterns on Joon Career</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://jooncode.com/tags/design-patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>Design Patterns</title><link>https://jooncode.com/blog/code/ood/</link><pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate><guid>https://jooncode.com/blog/code/ood/</guid><description>Design patterns are essential in development as they provide a structured approach to solve common problems. Object-oriented design patterns are the most widely used patterns, and they form the backbone of most software applications.
In this post, I&amp;rsquo;ll share my experience as a OOD TA and insights on how these patterns work and provide you with some sample code to help you understand them better. We will explore Singleton, Factory, Strategy, and Observer patterns, and how these patterns can be used to improve the quality of your designs and provide you with code samples to illustrate their implementation.</description></item></channel></rss>