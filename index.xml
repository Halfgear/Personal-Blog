<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Joon Career</title><link>https://jooncode.com/</link><description>Recent content on Joon Career</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 25 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://jooncode.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Valorant Website Project</title><link>https://jooncode.com/code/introduction/</link><pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate><guid>https://jooncode.com/code/introduction/</guid><description>My Experience with Riot Games For the past 10 years, Riot Games has been the cornerstone of my gaming experience. I&amp;rsquo;ve always cherished those competitive moments, playing alongside friends to clutch those hard-earned victories in League of Legends and Valorant.
My enthusiasm was so contagious that I naturally wanted more friends to join the fray. Yet, the highly competitive nature of these games made it challenging for me as an advanced player to guide them.</description></item><item><title>Building a Match Crawler</title><link>https://jooncode.com/code/crawler/</link><pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate><guid>https://jooncode.com/code/crawler/</guid><description>Introduction Before I check my insights of Valorant with stats, the foremost task was to construct a robust data crawler. This pivotal first step would act as the foundation, paving the way for any meaningful analysis. When building a data crawler to fetch, process, and store a massive amount of data, challenges are inevitable. As I embarked on my journey to create a crawler for Valorant&amp;rsquo;s match data, I encountered a series of obstacles that pushed me to optimize my approach in terms of speed, storage, and robustness.</description></item><item><title>Agent difficulty Paradox</title><link>https://jooncode.com/code/agentparadox/</link><pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate><guid>https://jooncode.com/code/agentparadox/</guid><description>Introduction The realm of Valorant offers players numerous agents, each boasting unique abilities and strategies to win. But how do players, both new and experienced, navigate this vast selection?
With a combination of Python programming and a rich dataset extracted from MongoDB, I obtained the performance metrics of various agents across different skill tiers. The result challenges widely held beliefs and shed light on the actual efficacy of agents in various gameplay scenarios.</description></item><item><title>Design Patterns</title><link>https://jooncode.com/code/ood/</link><pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate><guid>https://jooncode.com/code/ood/</guid><description>Introduction Design patterns are essential in development as they provide a structured approach to solve common problems. Object-oriented design patterns are the most widely used patterns, and they form the backbone of most software applications. In this post, I&amp;rsquo;ll share my experience as a OOD TA and insights on how these patterns work and provide you with some sample code to help you understand them better. We will explore Singleton, Factory, Strategy, and Observer patterns, and how these patterns can be used to improve the quality of your designs and provide you with code samples to illustrate their implementation.</description></item><item><title>My first custom keyboard</title><link>https://jooncode.com/blogs/keyboard/frogtkl/</link><pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate><guid>https://jooncode.com/blogs/keyboard/frogtkl/</guid><description>Nothing crazy. Just some typing video with my first custom keyboard.</description></item><item><title>My 2022: Coming back from military!</title><link>https://jooncode.com/blogs/gallery/2022/</link><pubDate>Mon, 20 Mar 2023 18:35:46 +0530</pubDate><guid>https://jooncode.com/blogs/gallery/2022/</guid><description/></item><item><title>Discord Bot Development story</title><link>https://jooncode.com/code/nestdiscordbot/</link><pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate><guid>https://jooncode.com/code/nestdiscordbot/</guid><description>Introduction Software engineering is a rapidly changing field. Every day, new tools and technologies are being released that can help developers more efficiently create and manage applications. As a software engineer, it can be difficult to keep up with all the changes and ensure that you are staying up to date with the latest best practices. In this blog post, I will share my experience reaching out to my favorite league data analysis youtuber&amp;rsquo;s company and apply my knowlege and skill out side of class.</description></item><item><title>AI League of Legend</title><link>https://jooncode.com/blogs/game/leagueaibot/</link><pubDate>Wed, 08 Feb 2023 00:00:00 +0000</pubDate><guid>https://jooncode.com/blogs/game/leagueaibot/</guid><description>What if there is Faker Bot in League? As a computer science student, I find artificial intelligence (AI) bots fascinating. I want to extend the AI idea within the context of popular video games. With the development of AI technology, the way we play video games has drastically changed. AI-powered video games are now more interactive and immersive than ever before and have opened up a world of possibilities for gamers.</description></item></channel></rss>