[{"content":"\u003ch2 id=\"what-if-there-is-faker-bot-in-league\"\u003eWhat if there is Faker Bot in League?\u003c/h2\u003e\n\u003cp\u003eAs a computer science student, I find artificial intelligence (AI) bots fascinating. I want to extend the AI idea within the context of popular video games. With the development of AI technology, the way we play video games has drastically changed. AI-powered video games are now more interactive and immersive than ever before and have opened up a world of possibilities for gamers.\u003c/p\u003e\n\u003cp\u003eAI technology is also being used to create computer-controlled opponents that are smarter and learn from their mistakes, making the game much more challenging and fun. Moreover, AI-driven games can generate unique and customizable environments for players to explore and enjoy. These AI-driven environments can give rise to the development of new meta, creating new and exciting ways to play these games.\u003c/p\u003e\n\u003cp\u003eThe thought of an AI playing League of Legends at the highest level is an inspiring one. In order for it to play at a top level, it would need a massive amount of data from pro games and solo ranks with knowledge to be able to accurately react to in-game events in real-time. This would include its ability to understand every lane, item and champion interaction, as well as understanding the meta at a certain point in time.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/posts/League/humanVSai.jpg\" alt=\"Image from Sejong University\"\u003e\u003c/p\u003e\n\u003cp\u003eThere was an simlar attempt to create a \u0026ldquo;Pro Gamer AI\u0026rdquo; in Starcraft in 2017 at Sejong University, but it was not successful at the time because they were not able to build machine learning structure for the real time simulation games. For an AI to play at a top level, it would need to understand a massive amount of data from pro games and solo ranks, as well as knowledge to be able to accurately react to in-game events in real-time. This would include its ability to understand every lane, item and champion interaction, as well as understanding the meta at a certain point in time.\u003c/p\u003e\n\u003cp\u003eIt is fascinating to think about how this AI would be played. Would it still be EU meta, or would there be outstanding champions according to AI? Its ability to react to in-game events could make it an even more exciting player to watch. Additionally, an AI playing LOL at an AlphaGo level could potentially revolutionize the game with new meta led by AI and provide new insights for pro league games win percentage according to current situation.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/posts/League/LOL_Crowd.jpg\" alt=\"League Crowd\"\u003e\u003c/p\u003e\n\u003cp\u003eThe potential for AI technology in League of Legends is truly remarkable. As we imagine the possibilities, it\u0026rsquo;s clear that this technology has the power to transform the game in exciting new ways. The AI-led meta could open up entirely new strategies and tactics, and provide deep insights into the performance of professional teams and their win percentages in real-time. Furthermore, it has the potential to revolutionize the way intermediate-level players practice and improve their skills. By offering a challenging, dynamic and ever-changing AI opponent, players will no longer have to rely on boring or repetitive normal AI matches to sharpen their abilities. The future of League of Legends and AI technology is truly exciting. As I learn more about league API data and AI, I want to develop AI model for the pro league strategies!\u003c/p\u003e\n","description":"Thoughts about AI as a player in League of Legend","image":"/posts/League/faker.jpeg","permalink":"https://jooncode.com/blogs/game/leagueaibot/","title":"AI League of Legend"},{"content":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eSoftware engineering is a rapidly changing field. Every day, new tools and technologies are being released that can help developers more efficiently create and manage applications. As a software engineer, it can be difficult to keep up with all the changes and ensure that you are staying up to date with the latest best practices. In this blog post, I will share my experience reaching out to my \u003ca href=\"https://www.youtube.com/channel/UCqI5lyTpC79pOy2D-VXAMdA\"\u003efavorite league data analysis youtuber\u003c/a\u003e\u0026rsquo;s company and apply my knowlege and skill out side of class.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/projects/ps.png\" alt=\"ps spectator\"\u003e\u003c/p\u003e\n\u003ch2 id=\"how-i-reached-out-to-them\"\u003eHow I reached out to them\u003c/h2\u003e\n\u003cp\u003eAfter completing the basic Computer Science classes, I looked for interesting side projects to join. I sent an e-mail to one of my favorite League YouTuber expressing my interest to join any proejcts and my desire to collaborate. To my surprise, the CEO responded and suggested that I start by helping with management of Discord community called NoTrollz for league of legend friendly matchs between clubs first. Then see if we could further develop something once we got to know each other better. I was thrilled to have the opportunity to work with a real-world company and acquire some valuable experience.\u003c/p\u003e\n\u003ch2 id=\"working-on-the-project\"\u003eWorking on the Project\u003c/h2\u003e\n\u003cp\u003eMy recent project was to create a discord bot that manages user\u0026rsquo;s roles and teams. The goal of the project was to learn Typescript and NestJs that would make the bot to be accessible to company\u0026rsquo;s current work environment. One of the biggest challenges I faced was learning how to learning new language and framework with limited amount of documents. These tools are relatively new and I had no prior experience working with them. Despite the challenges, I was ultimately able to create a simple bot that automated the chore for the server manager.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/projects/docker+postgresql.jpeg\" alt=\"docker+postgresql\"\u003e\u003c/p\u003e\n\u003ch2 id=\"continuing-education\"\u003eContinuing Education\u003c/h2\u003e\n\u003cp\u003eAfter the first part, I had a meeting with a senior developer from the company I\u0026rsquo;m working with. During the meeting, we discussed the current feature and the senior developer suggested to create a user data base and develop a more advanced automation bot.\u003c/p\u003e\n\u003cp\u003eThe automation of the feature could not be done solely with Discord\u0026rsquo;s features and a database was necessary to handle user\u0026rsquo;s roles and teams for extendability and sustainability. To match the company\u0026rsquo;s existing system, I learned and implemented Docker Compose and PostgreSQL. To ensure my plan of action would work, I conducted research and experimented with the new technologies before implementing them into the project.\u003c/p\u003e\n\u003ch2 id=\"dockerizing-the-bot\"\u003eDockerizing the bot\u003c/h2\u003e\n\u003cp\u003eTo begin with, I created a devcontainer with psql database in VS code, which allowed me to develop and test my bot in a containerized environment. Since this bot will run under AWS in future, I had to create the containerized environment to minimize unexpected bug. This was a crucial step in ensuring that my development environment was consistent across different machines.\u003c/p\u003e\n\u003cp\u003eNext, I built a data table using TypeORM Entity. When building the data table for my Discord bot, I took into consideration the potential future development plans and added data types that I would need from users.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e@Entity()\nexport class notrollz_entity extends BaseEntity {\n    @PrimaryGeneratedColumn(\u0026#34;uuid\u0026#34;)\n    uuid: string\n\n    @Index(\u0026#34;discord_id\u0026#34;, { unique: true })\n    @Column({ type: \u0026#34;varchar\u0026#34; })\n    discord_id: string\n\n    @Column({ type: \u0026#34;varchar\u0026#34; })\n    discord_tag: string\n\n    @Column({ type: \u0026#34;varchar\u0026#34; })\n    summoner_name: string\n\n    @Column({\n        type: \u0026#34;varchar\u0026#34;,\n        default: \u0026#34;\u0026#34;\n    })\n    team_name: string\n\n    @Column({\n        type: \u0026#34;boolean\u0026#34;,\n        default: false\n    })\n    team_catain?: boolean\n\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOne issue I encountered while building the data table was with the formatting of the Discord IDs. To resolve this, I used the uuid generator from Node.js to generate unique IDs for each user and gave the unique property to discord_id to prevent duplicate user registration on the database. By creating a well-structured data table with appropriate data types and using a unique ID generator, I was able to ensure that my Discord bot could accurately and efficiently store and retrieve user data. I then sent a query from my nestjs app with typeorm to qsql in the devcontainer to test the functionality of data table.\u003c/p\u003e\n\u003cimg src=\"/projects/psql_command.PNG\" style=\"display: block; margin-left: auto; margin-right: auto; width: 97%; height: 97%;\"/\u003e\n\u003cp\u003eAfter completing the initial development of the bot, I made the nestjs app into a Docker image and included it in a docker-compose file. This allowed me to easily deploy the bot to different environments and delegate the bot service to AWS instead of local computer. I also built a connection to psql in the new image with conscious volume mount, which was necessary for persisting data. When the connection was successful, I was very happy with my progress.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/projects/discord_usage.PNG\" alt=\"discord_usage\"\u003e\u003c/p\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eOverall, my experience working on this project was very rewarding. In a short amount of time, I was able to apply my knowledge of Object Oriented Design and acquire new experiences with docker containers, postgres, and javascript. Continuous education is an important part of staying up to date in the ever-changing world of software engineering and this project gave me the great lesson. By researching and experimenting with the latest tools and technologies, I am looking forward to create an advanced bot that improved the workflow of the community management of the company.\u003c/p\u003e\n","description":"Elaboration of my side project","image":"/projects/Bot_github.png","permalink":"https://jooncode.com/blogs/class/nestdiscordbot/","title":"Discord Bot Development story"},{"content":"\u003cimg src=\"/me/military.jpg\" style=\"display: block; margin-left: auto; margin-right: auto; width: 50%; height: 50%;\"/\u003e\n\u003cimg src=\"/me/northeastern.jpg\" style=\"display: block; margin-left: auto; margin-right: auto; width: 50%; height: 50%;\"/\u003e\n\u003cimg src=\"/me/Dinner.jpg\" style=\"display: block; margin-left: auto; margin-right: auto; width: 50%; height: 50%;\"/\u003e\n\u003cimg src=\"/me/newyork.jpg\" style=\"display: block; margin-left: auto; margin-right: auto; width: 50%; height: 50%;\"/\u003e\n\u003cimg src=\"/me/pack.jpg\" style=\"display: block; margin-left: auto; margin-right: auto;width: 50%; height: 50%;\"/\u003e\n\u003cimg src=\"/me/pho.jpg\" style=\"display: block; margin-left: auto; margin-right: auto;width: 50%; height: 50%;\"/\u003e\n","description":"Great to be back to School","image":"/me/northeastern.jpg","permalink":"https://jooncode.com/blogs/gallery/2022/","title":"My 2022: Coming back from military!"}]